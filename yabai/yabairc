#!/usr/bin/env sh

#================================================================================
# Startup & Scripting Addition
#================================================================================
# Ensure the scripting addition is loaded. This is required for many features.
# The signal ensures it's reloaded if the Dock restarts.

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

#================================================================================
# Global Settings
#================================================================================

# Default layout mode (bsp, stack, or float)
yabai -m config layout bsp

# New window placement (second_child or first_child)
yabai -m config window_placement second_child

# Gaps and padding
yabai -m config top_padding    13
yabai -m config bottom_padding 53
yabai -m config left_padding   73
#yabai -m config left_padding  61
yabai -m config right_padding  13
yabai -m config window_gap     15

# General window settings
yabai -m config window_topmost    on
yabai -m config window_shadow     float
yabai -m config window_border     off
yabai -m config auto_balance      off
yabai -m config split_ratio       0.50

#================================================================================
# Mouse Settings
#================================================================================

# Modifier key for mouse actions (alt, cmd, ctrl, fn, shift)
yabai -m config mouse_modifier fn

# Action for modifier + left-click drag
yabai -m config mouse_action1 move

# Action for modifier + right-click drag
yabai -m config mouse_action2 resize

# Action for dropping a window on another
yabai -m config mouse_drop_action swap

# Focus follows mouse (disabled)
#yabai -m config focus_follows_mouse autofocus

#================================================================================
# Space Management
#================================================================================
# Clean up any extra spaces that might exist from previous sessions
for _ in $(yabai -m query --spaces | jq '.[].index | select(. > 14)'); do
  yabai -m space --destroy 15
done

# Function to create and label spaces if they don't exist
function setup_space {
  local idx="$1"
  local name="$2"
  local layout="bsp"

  space=$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --layout "$layout"
  yabai -m space "$idx" --label "$name"
}

# Create and label all desired spaces
setup_space 1  general-1
setup_space 2  general-2
setup_space 3  general-3
setup_space 4  general-4
setup_space 5  general-5
setup_space 6  work
setup_space 7  obsidian
setup_space 8  code
setup_space 9  spotify
setup_space 10 messages
setup_space 11 email
setup_space 12 perso
setup_space 13 bamboo stack
setup_space 14 illustration

#================================================================================
# Rules
#================================================================================

# -- Assign applications to specific spaces --
yabai -m rule --add app="^Spotify$" space=^spotify
yabai -m rule --add app="^IntelliJ$" space=^code
yabai -m rule --add app="^Code$" space=^code
yabai -m rule --add app="^Proton Mail$" space=^email
yabai -m rule --add app="^Signal$" space=^messages
yabai -m rule --add app="^Messenger$" space=^messages
yabai -m rule --add app="^Discord$" space=^messages
yabai -m rule --add app="^Obsidian$" space=^obsidian
yabai -m rule --add app="^Calendar$" space=^work
yabai -m rule --add app="^Slack$" space=^work
yabai -m rule --add app="^Miro$" space=^work
yabai -m rule --add app="^Bambu Studio$" space=^bamboo
yabai -m rule --add app="Fusion" space=^bamboo
yabai -m rule --add app="Lightroom" space=^illustration
yabai -m rule --add app="^Gimp" space=^illustration

# -- Disable window management for specific applications or windows --
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^Karabiner-Elements$" manage=off
yabai -m rule --add app="^QuickTime Player$" manage=off
yabai -m rule --add app="^Authy" manage=off
yabai -m rule --add app="^uBar$" manage=off
yabai -m rule --add app="^Bartender$" manage=off
yabai -m rule --add app="^zoom" manage=off sticky=off
yabai -m rule --add app="^Raycast$" manage=off
yabai -m rule --add app="^superwhisper$" manage=off
yabai -m rule --add app="^OpenVPN" manage=off
yabai -m rule --add app="^DaisyDisk$" manage=off
yabai -m rule --add app="^X-Mirage$" manage=off
yabai -m rule --add app="^insta360" manage=off
yabai -m rule --add app="^Bitwarden$" title="^Bitwarden$" sticky=on manage=off
yabai -m rule --add app="^Steam$" title="^Steam$" sticky=on manage=off
yabai -m rule --add app="^Finder$" title="^Copy$" manage=off
yabai -m rule --add app="^Bambu Studio$" title="^Warning$" manage=off
yabai -m rule --add app="^Bambu Studio$" title="^Error$" manage=off
yabai -m rule --add app="^Root$" title="Root" manage=off
yabai -m rule --add app='^Arc$' title='^Kevin$' manage=off
yabai -m rule --add app='^Proton Mail$' title='^Proton Mail$' sticky=off manage=on

JB_Apps='^(CLion|PyCharm|IntelliJ IDEA)$'
yabai -m rule --add app="${JB_Apps}" title!=".*\[.*\].*" manage=off

#================================================================================
# Signals (SketchyBar Integration)
#================================================================================
# These signals are sent to SketchyBar to trigger UI updates.

# When a window is focused, update the stack indicator
# Update stack indicator on relevant events
for event in window_focused application_launched application_terminated \
             window_created window_destroyed window_stacked window_unstacked \
             window_moved window_resized space_changed display_changed; do
  yabai -m signal --add event="$event" \
      action="$HOME/.config/sketchybar/plugins/stack_indicator.sh"
done


# "Fast Path": This runs instantly when you switch spaces.
yabai -m signal --add event=space_changed \
    action="$HOME/.config/sketchybar/plugins/space_change.sh"

# "Slow Path": This runs only when apps open, close, or move.
yabai -m signal --add event=application_launched \
    action="$HOME/.config/sketchybar/plugins/space.sh"
yabai -m signal --add event=application_terminated \
    action="$HOME/.config/sketchybar/plugins/space.sh"
yabai -m signal --add event=window_moved \
    action="$HOME/.config/sketchybar/plugins/space.sh"
yabai -m signal --add event=window_created \
    action="$HOME/.config/sketchybar/plugins/space.sh"
yabai -m signal --add event=window_destroyed \
    action="$HOME/.config/sketchybar/plugins/space.sh"

#================================================================================
# External Integrations (e.g., Borders)
#================================================================================

options=(
    active_color=0xFFFFA500 # Orange
    #active_color=0xFFFF0000 # Red
    inactive_color=0xFF0000000
    background_color=0x000000000
    width=7
    style=round
    hidpi=on
    ax_focus=on
    #blur_radius=25
)

borders "${options[@]}"
